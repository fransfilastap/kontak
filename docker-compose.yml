version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT:-8080}
      - HOST=${HOST:-0.0.0.0}
      - DB=${DB:-postgres://user:password@db:5432/dbname}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
      - INIT_USER=${INIT_USER:-admin}
      - INIT_PASS=${INIT_PASS:-password}
    ports:
      - "8080:8080"
    depends_on:
      - db
      - migrate

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - BACKEND_URL=${BACKEND_URL:-http://api:8080/v1}
      - KONTAK_API_URL=${KONTAK_API_URL:-http://api:8080/v1}
      - AUTH_SECRET=${AUTH_SECRET:-your_auth_secret}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3000/api}
      - TZ=${TZ:-Asia/Jakarta}
    ports:
      - "3000:3000"
    depends_on:
      - api

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-dbname}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "${DB:-postgres://user:password@db:5432/dbname}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./sql:/migrations
    depends_on:
      - db
    restart: on-failure

volumes:
  db_data: